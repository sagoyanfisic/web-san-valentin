<style is:global>
  :root {
    --color-love: #ff3f3f;
    --color-fresh: #4cd964;
    --color-spark: #ffd700;
    --color-ocean: #00a8ff;
  }

  @keyframes float {
    0% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(3deg); }
    100% { transform: translateY(0px) rotate(0deg); }
  }

  @keyframes lemon-fall {
    0% { transform: translateY(-100vh) rotate(0deg); opacity: 1; }
    100% { transform: translateY(100vh) rotate(360deg); opacity: 0; }
  }

  @keyframes quantum-spark {
    0% { opacity: 1; transform: scale(0) rotate(0deg); }
    100% { opacity: 0; transform: scale(3) rotate(720deg); }
  }

  @keyframes wave {
    0% { transform: translateX(-50%); }
    100% { transform: translateX(0%); }
  }

  .container {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: linear-gradient(45deg, #ff758c, #ff7eb3);
    overflow: hidden;
    position: relative;
  }

  .ceviche-animation {
    width: 350px;
    height: 350px;
    border-radius: 50%;
    border: 4px solid #fff;
    box-shadow: 0 15px 35px rgba(0,0,0,0.2);
    animation: float 3s ease-in-out infinite;
    cursor: pointer;
    transition: transform 0.3s ease;
    position: relative;
    z-index: 2;
  }

  .ceviche-animation:hover {
    transform: scale(1.05);
  }

  .title {
    font-size: 3.5rem;
    color: white;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    margin: 2rem 0;
    font-family: 'Comic Neue', cursive;
    position: relative;
    z-index: 2;
  }

  .button-container {
    display: flex;
    gap: 2rem;
    margin-top: 2rem;
    position: relative;
    z-index: 2;
  }

  .accept-btn {
    background: linear-gradient(45deg, var(--color-fresh), #45b7af);
    padding: 1.5rem 3rem;
    border: none;
    border-radius: 30px;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .deny-btn {
    background: linear-gradient(45deg, var(--color-love), #ff5252);
    padding: 1.5rem 3rem;
    border: none;
    border-radius: 30px;
    color: white;
    font-size: 1.5rem;
    cursor: not-allowed;
    transition: all 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    position: relative;
  }

  .lemon-particle {
    position: fixed;
    font-size: 1.2rem;
    opacity: 0.7;
    pointer-events: none;
    animation: lemon-fall linear infinite;
    z-index: 1;
  }

  .quantum-spark {
    position: absolute;
    width: 15px;
    height: 15px;
    background: radial-gradient(circle, var(--color-spark) 20%, transparent 70%);
    mix-blend-mode: screen;
    animation: quantum-spark 0.8s ease-out;
    pointer-events: none;
  }

  .ocean-wave {
    position: absolute;
    bottom: 0;
    width: 300%;
    height: 12rem;
    background-image: linear-gradient(
      to right,
      var(--color-ocean) 20%,
      transparent 50%,
      var(--color-ocean) 80%
    );
    animation: wave 15s linear infinite;
    opacity: 0.1;
    z-index: 1;
  }

  @media (max-width: 768px) {
    .ceviche-animation {
      width: 250px;
      height: 250px;
    }
    
    .title {
      font-size: 2.5rem;
    }
  }
</style>

<div class="container">
  <div class="ocean-wave"></div>
  <div class="ocean-wave" style="animation-delay: -5s"></div>

  <img 
    src="https://images.unsplash.com/photo-1535399831218-d5bd36d1a6b3" 
    class="ceviche-animation"
    alt="Ceviche Peruano"
    id="cevicheImage"
  />

  <h1 class="title">
    ¬øCeviche este <span style="color: var(--color-spark)">‚ù§Ô∏è San Valent√≠n</span>?
  </h1>

  <div class="button-container">
    <button class="accept-btn" id="acceptBtn">¬°S√≠, vamos! üéâ</button>
    <button class="deny-btn" id="denyBtn">üò¢ No puedo</button>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const acceptBtn = document.getElementById('acceptBtn');
    const denyBtn = document.getElementById('denyBtn');
    const cevicheImage = document.getElementById('cevicheImage');

    // Funci√≥n para crear limones
    const createLemons = (x, y) => {
      for(let i = 0; i < 15; i++) {
        const lemon = document.createElement('div');
        lemon.className = 'lemon-particle';
        lemon.textContent = 'üçã';
        lemon.style.left = `${x + (Math.random() * 200 - 100)}px`;
        lemon.style.animationDuration = `${Math.random() * 3 + 2}s`;
        document.body.appendChild(lemon);
        setTimeout(() => lemon.remove(), 5000);
      }
    };

    // Efecto de limones al hacer clic en la imagen
    cevicheImage.addEventListener('click', (e) => {
      createLemons(e.clientX, e.clientY);
      cevicheImage.style.animation = 'float 3s ease-in-out, spin 1s linear';
      setTimeout(() => {
        cevicheImage.style.animation = 'float 3s ease-in-out infinite';
      }, 1000);
    });

    // Efecto de limones y chispas al aceptar
    acceptBtn.addEventListener('click', (e) => {
      const rect = e.target.getBoundingClientRect();
      const x = rect.left + rect.width / 2;
      const y = rect.top + rect.height / 2;
      
      // Lluvia de limones
      createLemons(x, y);

      // Efecto de chispas
      for(let i = 0; i < 30; i++) {
        const spark = document.createElement('div');
        spark.className = 'quantum-spark';
        spark.style.left = `${x}px`;
        spark.style.top = `${y}px`;
        document.body.appendChild(spark);
        
        spark.animate([
          { transform: `translate(${Math.random()*200 - 100}px, ${Math.random()*200 - 100}px)` }
        ], { duration: 800 });
        
        setTimeout(() => spark.remove(), 800);
      }

      setTimeout(() => {
        alert('üéâ ¬°Reserva confirmada! Nos vemos a las 8 PM üçΩÔ∏è');
      }, 300);
    });

    // Sistema de evasi√≥n del bot√≥n rojo
    document.addEventListener('mousemove', (e) => {
      const btnRect = denyBtn.getBoundingClientRect();
      const btnCenterX = btnRect.left + btnRect.width / 2;
      const btnCenterY = btnRect.top + btnRect.height / 2;
      const distance = Math.hypot(e.clientX - btnCenterX, e.clientY - btnCenterY);

      if (distance < 150) {
        const angle = Math.atan2(e.clientY - btnCenterY, e.clientX - btnCenterX);
        const newX = btnCenterX + Math.cos(angle) * 100;
        const newY = btnCenterY + Math.sin(angle) * 100;
        
        denyBtn.style.transform = `translate(
          ${newX - btnCenterX}px,
          ${newY - btnCenterY}px
        )`;
      } else {
        denyBtn.style.transform = 'translate(0, 0)';
      }
    });
  });
</script>